version: "3.4"

networks:
   frontend:
   backend:

services:
  
   eventcatalog:
      build:
         context: .\EventCatalogAPI
         dockerfile: Dockerfile
      image: event/catalogapi
      environment:
         DatabaseServer: mssqlserver
         DatabaseName: eventCatalogdb
         DatabaseUser: sa
         DatabaseUserPassword: ProductApi(!)
      container_name: eventcatalogapi
      ports:
         - "55399:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver
         
       
   eventticket:
      build:
         context: .\EventTicketAPI
         dockerfile: Dockerfile
      image: event/ticketapi
      environment:
         DatabaseServer: mssqlserver
         DatabaseName: ticketdb
         DatabaseUser: sa
         DatabaseUserPassword: ProductApi(!)
      container_name: eventticketapi
      ports:
         - "55401:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver

   

   webmvc:
      build: 
         context: .\WebMvc
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         EventCatalogUrl: http://eventcatalog
         IdentityUrl: http://172.18.13.97:5020
         CartUrl: http://cart
         OrderUrl: http://orders        
         WishlistUrl: http://wishlist
      container_name: webevents
      ports:
         - "5200:80"
      networks:
         - frontend 
      depends_on:
         - eventcatalog
         - tokenserver
         - cart
         - order
         
         
                
   tokenserver:
      build: 
         context: .\TokenServiceAPI
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         MvcClient: http://localhost:5200
         BasketApiClient: http://localhost:5050
         OrderApiClient: http://localhost:5600
         CartApiClient: http://localhost:5051
      container_name: tokenserviceapi
      ports:
         - "5020:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - mssqlserver

   mssqlserver:
      image: "microsoft/mssql-server-linux:latest"
      ports:
         - "1451:1433"
      container_name: mssqlserver
      environment:
         ACCEPT_EULA: Y
         SA_PASSWORD: ProductApi(!)
      networks:
         - backend

   cart:
      image: event/cartimage
      build: 
         context: .\CartApi
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://tokenserver
      container_name: cartapi
      ports:
         - "5051:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - cartbasket.data
         - tokenserver

   wishlist:
      image: wishlistimage
      build:
         context: .\WishListAPI
         dockerfile: Dockerfile
      environment:
         ASPNETCORE_ENVIRONMENT: Development
         IdentityUrl: http://tokenserver
      container_name: wishlistapi
      ports:
         - "5050:80"
      networks:
         - backend
         - frontend
      depends_on:
         - basket.data
         - tokenserver


   order:
      image: event/order
      build: 
         context: .\OrderApi
         dockerfile: Dockerfile   
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://tokenserver
         DatabaseServer: mssqlserver
         DatabaseName: OrdersDb
         DatabaseUser: sa
         DatabaseUserPassword: ProductApi(!)
      container_name: orderapi
      ports:
         - "5600:80"
      networks:
         - backend
         - frontend 
      depends_on:
        - mssqlserver
        - tokenserver 
        

   basket.data:
      image: redis
      ports:
         - "6377:6379"  
      networks:
         - backend 
  
   cartbasket.data:
      image: redis
      ports:
         - "6378:6379"
      networks:
         - backend



